--lontong sayur
local Player = game.Players.LocalPlayer
_G.AutoRank = true

local globalBreakable = {}

delay(0, function()
	local script = game.Players.LocalPlayer.PlayerScripts.Scripts.Game["Egg Opening Frontend"]

	for i,v in pairs(getsenv(script)) do
		if string.find(i,"Animation") then
			for a,b in pairs(getupvalues(v)) do
				setupvalue(v,a,nil)
			end
		end
	end
end)

local function AutoBreakClick(areaName,ClickType)
	if #globalBreakable >= 1 then
		if workspace.__THINGS.Breakables:FindFirstChild(globalBreakable[1]) then
			for ranges = 1,10 do wait()
				local args = {
					[1] = tostring(globalBreakable[1])
				}

				game:GetService("ReplicatedStorage").Network.Breakables_PlayerDealDamage:FireServer(unpack(args))
			end
		else
			for d,Deletes in pairs(globalBreakable) do
				table.remove(globalBreakable, d)
			end
		end
	else
		local breakableTable = {}
		local breakableID = nil

		local hum = game.Players.LocalPlayer.Character
		local raycastParams = RaycastParams.new()
		raycastParams.FilterDescendantsInstances = {hum,workspace.__THINGS.Breakables,workspace.__THINGS.Pets,workspace.Camera}
		raycastParams.FilterType = Enum.RaycastFilterType.Exclude
		raycastParams.IgnoreWater = true

		for i,v in pairs(workspace.__THINGS.Breakables:GetChildren()) do
			if v.ClassName == "Model" and workspace:Raycast(v.PrimaryPart.Position, Vector3.new(0, -50, 0),raycastParams).Instance.Name == "BREAK_ZONE" and string.find(workspace:Raycast(v.PrimaryPart.Position, Vector3.new(0, -50, 0),raycastParams).Instance.Parent.Parent.Parent.Name,areaName) then        
				if ClickType == "Random" then
					table.insert(breakableTable, tostring(v.Name))
				elseif ClickType == "Focused" then
					breakableID = tostring(v.Name)
				end
			end
		end

		if ClickType == "Random" then
			for z,BreakablesID in pairs(breakableTable) do task.wait()
				local args = {
					[1] = tostring(BreakablesID)
				}

				game:GetService("ReplicatedStorage").Network.Breakables_PlayerDealDamage:FireServer(unpack(args))
				table.remove(breakableTable,z)
			end
		elseif ClickType == "Focused" then
			if table.find(globalBreakable, tostring(breakableID)) then
				--Pass
			else
				table.insert(globalBreakable, tostring(breakableID))
			end
		end
	end
end

local function teleportToArea(areaName,teleportType)
	if teleportType == "Canon" then
		local args = {
			[1] = tostring(areaName)
		}

		game:GetService("ReplicatedStorage").Network.Teleports_RequestTeleport:InvokeServer(unpack(args))

		local setBreak = false
		local totalChecks = 0

		for keepChecking = 1,100 do wait(0.2)
			if setBreak == false then
				local totalArea = #workspace.Map:GetChildren()
				totalChecks = totalChecks +1

				if totalChecks >= 100 then
					break
				end

				if totalArea >= 1 then
					for _,Area in pairs(workspace.Map:GetChildren()) do
						if Area:IsA("Folder") then
							if string.find(Area.Name, tostring(areaName)) then
								if Area.INTERACT.BREAK_ZONES:FindFirstChild("BREAK_ZONE") then
									wait(8)
									Player.Character.HumanoidRootPart.CFrame = Area.INTERACT.BREAK_ZONES:FindFirstChild("BREAK_ZONE").CFrame * CFrame.new(0,5,0)
									setBreak = true
									break
								end
							end
						end
					end
				end
			else
				break
			end
		end
	elseif teleportType == "CFrameTeleport" then
		for _,Area in pairs(workspace.Map:GetChildren()) do
			if Area:IsA("Folder") then
				if string.find(Area.Name, tostring(areaName)) then
					if Area.INTERACT.BREAK_ZONES:FindFirstChild("BREAK_ZONE") then
						if Player:DistanceFromCharacter(Area.INTERACT.BREAK_ZONES:FindFirstChild("BREAK_ZONE").Position) <= 30 then
							--Pass
						else
							Player.Character.HumanoidRootPart.CFrame = Area.INTERACT.BREAK_ZONES:FindFirstChild("BREAK_ZONE").CFrame * CFrame.new(0,5,0)
						end
						
						break
					end
				end
			end
		end
	end
end

local function getMission()
	local TaskTable = {}

	for _,MissionText in pairs(Player.PlayerGui.GoalsSide.Frame.Quests.QuestsGradient.QuestsHolder:GetChildren()) do
		if MissionText:IsA("Frame") then
			if MissionText.Name == "RankUpNotif" then
				--Pass
			else
				if MissionText.Visible == true then
					local getMissionTask = tostring(MissionText.Title.Text)
					local getProgressTask = tonumber(tostring(MissionText.Progress.Text):split("/")[1])
					local getLastTask = tonumber(tostring(MissionText.Progress.Text):split("/")[2])
					
					--Unlock Area
					if getMissionTask == "Unlock an Area" then
						TaskTable[MissionText.Name] = {"Unlock Area",getProgressTask,getLastTask}
					end

					--Normal Breaking
					if getMissionTask:split("Break ")[2] == nil then
						--Pass
					else
						TaskTable[MissionText.Name] = {"Normal Break",getProgressTask,getLastTask}
					end
					
					--Normal Earn
					if getMissionTask:split("Earn ")[2] == nil then
						--Pass
					else
						TaskTable[MissionText.Name] = {"Normal Earn",getProgressTask,getLastTask}
					end

					--Normal Hatch
					if getMissionTask:split("Hatch ")[2] == nil then
						--Pass
					else
						TaskTable[MissionText.Name] = {"Normal Hatch",getProgressTask,getLastTask}
					end
				end
			end
		end
	end

	return TaskTable
end

local function openEgg(eggName)
	local getEggID = nil
	local priceTable = {}
	local PlayerBalance = 0

	for z,BalanceList in pairs(Player.PlayerGui.MainLeft.Left.Currency.Coins:GetChildren()) do
		if BalanceList:IsA("Frame") then
			if BalanceList.Name == "Gold Coins" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)
				end
			end

			if BalanceList.Name == "Gold Bars" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*1000000
				end
			end

			if BalanceList.Name == "Platinum Coins" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*1000000000
				end
			end

			if BalanceList.Name == "Platinum Bars" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*100000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*10000000000
				end
			end

			if BalanceList.Name == "Emerald Coins" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000000000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*10000000000000
				end
			end
		end
	end

	print(PlayerBalance)

	for x,CheckReplicatedEggs in pairs(game.ReplicatedStorage["__DIRECTORY"].Eggs["Zone Eggs"]:GetChildren()) do
		if string.find(CheckReplicatedEggs.Name, eggName) then
			print(CheckReplicatedEggs.Name, "1")
			getEggID = tostring(CheckReplicatedEggs.Name):split(" |")[1]
			print(getEggID)
			break
		end
	end

	local eggObject = workspace["__THINGS"].Eggs.Main:FindFirstChild(tostring(getEggID) .. " - Egg Capsule")
	local eggCFrame = eggObject.Egg.CFrame
	local eggPosition = eggObject.Egg.Position
	local getEggPrice = eggObject.PriceHUD.PriceHUD
	local totalPrice = 0

	for z,EggPriceList in pairs(getEggPrice:GetChildren()) do
		if EggPriceList:IsA("Frame") then
			if EggPriceList.Name == "Gold Coins" then
				if string.find(EggPriceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(EggPriceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000

					totalPrice = totalPrice +calculatedPrice
				else
					totalPrice = totalPrice +tonumber(EggPriceList.Amount.Text)
				end
			end

			if EggPriceList.Name == "Gold Bars" then
				if string.find(EggPriceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(EggPriceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000

					totalPrice = totalPrice +calculatedPrice
				else
					totalPrice = totalPrice +tonumber(EggPriceList.Amount.Text)*1000000
				end
			end

			if EggPriceList.Name == "Platinum Coins" then
				if string.find(EggPriceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(EggPriceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000000

					totalPrice = totalPrice +calculatedPrice
				else
					totalPrice = totalPrice +tonumber(EggPriceList.Amount.Text)*1000000000
				end
			end

			if EggPriceList.Name == "Platinum Bars" then
				if string.find(EggPriceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(EggPriceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*100000000000

					totalPrice = totalPrice +calculatedPrice
				else
					totalPrice = totalPrice +tonumber(EggPriceList.Amount.Text)*10000000000
				end
			end

			if EggPriceList.Name == "Emerald Coins" then
				if string.find(EggPriceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(EggPriceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000000000000000

					totalPrice = totalPrice +calculatedPrice
				else
					totalPrice = totalPrice +tonumber(EggPriceList.Amount.Text)*10000000000000
				end
			end
		end
	end

	local quantity = tonumber(tostring(Player.PlayerGui["_MACHINES"].EggSlotsMachine.Frame.Slots.Items.Title.Remaining.Text):split("/")[1])
	local allCost = totalPrice*quantity

	if PlayerBalance >= allCost then
		if Player:DistanceFromCharacter(eggPosition) <= 12.5 then
			local args = {
				[1] = tostring(eggName),
				[2] = tonumber(quantity)
			}

			game:GetService("ReplicatedStorage").Network.Eggs_RequestPurchase:InvokeServer(unpack(args))
		else
			Player.Character.HumanoidRootPart.CFrame = eggCFrame
		end
	else
		print("Not Enough")
		return 'Not Enough'
	end
end

local function getLastArea()
	local MapTable = {}

	for _,MapButton in pairs(Player.PlayerGui.TeleportMap.Frame.Map.Locations:GetChildren()) do
		if MapButton:IsA("Frame") then
			if MapButton.Box.LockedHolder.Visible == false then
				local getTextHolder = string.gsub(tostring(MapButton.Box.TextHolder.Number.Text),"#","")
				local getAreaName = tostring(MapButton.Box.TextHolder.Title.Text)

				table.insert(MapTable, {tonumber(getTextHolder), getAreaName})
			end
		end
	end

	table.sort(MapTable, function(a,b)
		return a[1] > b[1]
	end)

	print(`#{MapTable[1][1]} | {MapTable[1][2]}`)
	return MapTable[1]
end

local function getLastAreaV2(checkType)
	local areaTable = {}

	if checkType == "lastLocked" then
		for z,Area in pairs(workspace.Map:GetChildren()) do
			if Area:IsA("Folder") then
				if Area.INTERACT:FindFirstChild("Gate") then
					local getAreaID = tostring(Area.INTERACT.Gate.GateHUD.Title.Text):split("Area ")[2]
					table.insert(areaTable, {tonumber(getAreaID),Area.Name})
				end
			end
		end

		table.sort(areaTable, function(a,b)
			return a[1] < b[1]
		end)

		local lastArea = areaTable[1][2]

		return areaTable[1]
	elseif checkType == "lastUnlocked" then
		for z,Area in pairs(workspace.Map:GetChildren()) do
			if Area:IsA("Folder") then
				if Area.INTERACT:FindFirstChild("Gate") then
					local getAreaID = tostring(Area.INTERACT.Gate.GateHUD.Title.Text):split("Area ")[2]
					table.insert(areaTable, {tonumber(getAreaID),Area.Name})
				end
			end
		end

		table.sort(areaTable, function(a,b)
			return a[1] < b[1]
		end)

		local lastArea = areaTable[1][2]
		local getLastAreaID = tonumber(areaTable[1][1])

		getLastAreaID = getLastAreaID -1
		local lastUnlockedArea = nil

		for w,x in pairs(workspace.Map:GetChildren()) do
			if x:IsA("Folder") then
				if string.find(x.Name, tostring(getLastAreaID) .. " | ") then
					lastUnlockedArea = x.Name
					break
				end
			end
		end

		return lastUnlockedArea
	end
end

local function getPlayerBalance()
	local PlayerBalance = 0

	for z,BalanceList in pairs(Player.PlayerGui.MainLeft.Left.Currency.Coins:GetChildren()) do
		if BalanceList:IsA("Frame") then
			if BalanceList.Name == "Gold Coins" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)
				end
			end

			if BalanceList.Name == "Gold Bars" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*1000000
				end
			end

			if BalanceList.Name == "Platinum Coins" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*1000000000
				end
			end

			if BalanceList.Name == "Platinum Bars" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*100000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*10000000000
				end
			end

			if BalanceList.Name == "Emerald Coins" then
				if string.find(BalanceList.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(BalanceList.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000000000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(BalanceList.Amount.Text)*10000000000000
				end
			end
		end
	end

	return PlayerBalance
end

local function getAreaPrice(areaName)
	print(areaName)
	local getAreaPrice = workspace.Map:FindFirstChild(areaName).INTERACT.Gate.GateHUD.Req
	local PlayerBalance = 0

	for z,Currency in pairs(getAreaPrice:GetChildren()) do
		if Currency:IsA("Frame") then
			if Currency.Name == "Gold Coins" then
				if string.find(Currency.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(Currency.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(Currency.Amount.Text)
				end
			end

			if Currency.Name == "Gold Bars" then
				if string.find(Currency.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(Currency.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(Currency.Amount.Text)*1000000
				end
			end

			if Currency.Name == "Platinum Coins" then
				if string.find(Currency.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(Currency.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*10000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(Currency.Amount.Text)*1000000000
				end
			end

			if Currency.Name == "Platinum Bars" then
				if string.find(Currency.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(Currency.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*100000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(Currency.Amount.Text)*10000000000
				end
			end

			if Currency.Name == "Emerald Coins" then
				if string.find(Currency.Amount.Text, "k") then
					local filteredPrice = string.gsub(tostring(Currency.Amount.Text),"k","")
					local calculatedPrice = tonumber(filteredPrice)*1000000000000000

					PlayerBalance = PlayerBalance +calculatedPrice
				else
					PlayerBalance = PlayerBalance +tonumber(Currency.Amount.Text)*10000000000000
				end
			end
		end
	end

	return PlayerBalance
end

delay(0, function()
	while _G.AutoRank do wait(0.3)
		local Response = getMission()
		
		delay(0, function()
			local pz = pcall(function()
				for _,Orbs in pairs(workspace["__THINGS"].Orbs:GetChildren()) do
					if Orbs:IsA("Part") then
						local args = {
							[1] = {
								[1] = tonumber(Orbs.Name)
							}
						}

						game:GetService("ReplicatedStorage").Network:FindFirstChild("Orbs: Collect"):FireServer(unpack(args))
						task.wait(); Orbs:Destroy()
					end
				end
			end)

			local lootHandling = pcall(function()
				local lootTable = {}

				for _,Loot in pairs(workspace["__THINGS"].Lootbags:GetChildren()) do
					table.insert(lootTable, tostring(Loot.Name))
				end

				local args = {
					[1] = lootTable
				}

				game:GetService("ReplicatedStorage").Network.Lootbags_Claim:FireServer(unpack(args))

				for z,TableValue in pairs(lootTable) do
					local pz = pcall(function()
						workspace["__THINGS"].Lootbags:FindFirstChild(TableValue):Destroy()
					end)

					table.remove(lootTable, z)
				end
			end)
			
			local mediumPriority = false
						
			--Medium Task
			if Response["Medium"] == nil then
				--Pass
			else
				if Response["Medium"][1] == "Unlock Area" then
					mediumPriority = true
					local responses = getLastAreaV2("lastLocked")
					local getLastArea = responses[2]
					
					local areaPrice = getAreaPrice(getLastArea)
					local playerBalance = getPlayerBalance()
					
					local filteredArea = tostring(responses[2]):split("| ")[2]
					
					if playerBalance >= areaPrice then
						local args = {
							[1] = filteredArea
						}

						game:GetService("ReplicatedStorage").Network.Zones_RequestPurchase:InvokeServer(unpack(args))
					else
						local responses = getLastAreaV2("lastUnlocked")
						local getCurrentUnlockedArea = tostring(responses):split("| ")[2]

						delay(0, function()
							teleportToArea(getCurrentUnlockedArea, "CFrameTeleport")
						end)

						task.wait()

						delay(0, function()
							AutoBreakClick(getCurrentUnlockedArea, "Random")
						end)
					end
				end
			end
			
			if mediumPriority == false then
				if Response["Easy"] == nil then
					--Pass
				else
					if Response["Easy"][1] == "Normal Break" then
						delay(0, function()
							teleportToArea("Spawn", "CFrameTeleport")
						end)

						task.wait()

						delay(0, function()
							AutoBreakClick("Spawn","Focused")
						end)
					elseif Response["Easy"][1] == "Normal Earn" then
						local responses = getLastAreaV2("lastUnlocked")
						local getCurrentUnlockedArea = tostring(responses):split("| ")[2]

						delay(0, function()
							teleportToArea(getCurrentUnlockedArea, "CFrameTeleport")
						end)

						task.wait()

						delay(0, function()
							AutoBreakClick(getCurrentUnlockedArea, "Random")
						end)
					elseif Response["Easy"][1] == "Normal Hatch" then
						local eggResponse = openEgg("Cracked Egg")
						local isEnough = nil; print(eggResponse)

						if eggResponse == "Not Enough" then
							isEnough = false;

							delay(0, function()
								teleportToArea("Spawn", "CFrameTeleport")
							end)

							task.wait()

							delay(0, function()
								AutoBreakClick("Spawn", "Focused")
							end)
						end

						if isEnough == true then
							if Player:DistanceFromCharacter(workspace:FindFirstChild("__THINGS").Eggs.Main["1 - Egg Capsule"].Egg.Position) <= 10 then
								--Pass
							else
								Player.Character.HumanoidRootPart.CFrame = workspace:FindFirstChild("__THINGS").Eggs.Main["1 - Egg Capsule"].Egg.CFrame  * CFrame.new(0,5,0)
							end
						end
					end
				end
			end
		end)
	end
end)
